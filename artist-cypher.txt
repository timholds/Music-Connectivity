CREATE CONSTRAINT ON (a:Artist) ASSERT a.name IS UNIQUE;

# Get the nodes 
USING PERIODIC COMMIT 50
    LOAD CSV WITH HEADERS from 'https://s3-us-west-1.amazonaws.com/tim-test000/artists.csv' as line
MERGE (artist:Artist {artistName: line.Artist})

# Make relationships
# MERGE on a relationship - to create feature relationships with strength property
USING PERIODIC COMMIT 50
    LOAD CSV WITH HEADERS from 'https://s3-us-west-1.amazonaws.com/tim-test000/artists-full.csv' as line
MATCH (artist:Artist { name: line.Artist }), (feature1:Artist { name: line.Feature1 })
MERGE (artist)-[f1:FEATURED]->(feature1)
ON CREATE SET f1.strength = 1
ON MATCH SET f1.strength = f1.strength + 1
RETURN artist.name, type(f1), feature1.name

USING PERIODIC COMMIT 50
    LOAD CSV WITH HEADERS from 'https://s3-us-west-1.amazonaws.com/tim-test000/artists-full.csv' as line
MATCH (artist:Artist { name: line.Artist }), (feature2:Artist { name: line.Feature2 })
MERGE (artist)-[f2:FEATURED]->(feature2)
ON CREATE SET f2.strength = 1
ON MATCH SET f2.strength = f2.strength + 1
RETURN artist.name, type(f2), feature2.name

USING PERIODIC COMMIT 50
    LOAD CSV WITH HEADERS from 'https://s3-us-west-1.amazonaws.com/tim-test000/artists-full.csv' as line
MATCH (artist:Artist { name: line.Artist }), (feature3:Artist { name: line.Feature3 })
MERGE (artist)-[f3:FEATURED]->(feature3)
ON CREATE SET f3.strength = 1
ON MATCH SET f3.strength = f3.strength + 1
RETURN artist.name, type(f3), feature3.name

# Delete the connections to ’None’ for when there isn’t a feature in that column
MATCH (artist:Artist { name:'None'})
OPTIONAL MATCH (artist)-[r]-() 
DELETE r 

# Get the nodes with the most connections
MATCH (a)-[:FEATURED]->(b)
RETURN b, COLLECT(a) as artists
ORDER BY SIZE(artists) DESC LIMIT 10




# To import the data
USING PERIODIC COMMIT 50
    LOAD CSV WITH HEADERS from 'https://s3-us-west-1.amazonaws.com/tim-test000/artist-test.csv' as line
MERGE (artist:Artist {artistName: line.Artist})
MERGE (feature1:Artist {artistName: line.Feature1})
MERGE (feature2:Artist {artistName: line.Feature2})
MERGE (feature3:Artist {artistName: line.Feature3})

# For making the strength of features
MERGE (artist)-[f1:FEATURES]->(feature1) 
ON CREATE SET f1.strength = 1
ON MATCH SET f1.strength = f1.strength + 1

MERGE (artist)-[f2:FEATURES]->(feature2) 
ON CREATE SET f2.strength = 1
ON MATCH SET f2.strength = f2.strength + 1

MERGE (artist)-[f3:FEATURES]->(feature3) 
ON CREATE SET f3.strength = 1
ON MATCH SET f3.strength = f3.strength + 1


# To match an artist
MATCH (a:Artist {artistName: ‘Eminem’ })
RETURN a

# To match all features
MATCH (a:Artist {artistName: ‘Eminem’ })—-(f:Feature) 
RETURN f.artistName

# Test cypher code
USING PERIODIC COMMIT 50
    LOAD CSV WITH HEADERS from 'https://s3-us-west-1.amazonaws.com/tim-test000/artist-test.csv' as line
MERGE (artist:Artist {artistName: line.Artist})-[f1:Features]—(feature:Artist {artistName: line.Feature1})
ON CREATE SET f1.strength = 1
ON MATCH SET f1.strength = f1.strength + 1
MERGE (artist:Artist {artistName: line.Artist})-[f2:Features]—(feature:Artist {artistName: line.Feature2})
ON CREATE SET f2.strength = 1
ON MATCH SET f2.strength = f2.strength + 1
MERGE (artist:Artist {artistName: line.Artist})-[f3:Features]—(feature:Artist {artistName: line.Feature3})
ON CREATE SET f3.strength = 1
ON MATCH SET f3.strength = f3.strength + 1

# More test cypher code
USING PERIODIC COMMIT 50
    LOAD CSV WITH HEADERS from 'https://s3-us-west-1.amazonaws.com/tim-test000/artists-full.csv' as line
MERGE (:Artist {artistName: line.Artist})-[f1:Features]—(feature1:Artist {artistName: line.Feature1})
ON CREATE SET f1.strength = 1
ON MATCH SET f1.strength = f1.strength + 1
MERGE (:Artist {artistName: line.Artist})-[f2:Features]—(feature2:Artist {artistName: line.Feature2})
ON CREATE SET f2.strength = 1
ON MATCH SET f2.strength = f2.strength + 1
MERGE (:Artist {artistName: line.Artist})-[f3:Features]—(feature3:Artist {artistName: line.Feature3})
ON CREATE SET f3.strength = 1
ON MATCH SET f3.strength = f3.strength + 1


